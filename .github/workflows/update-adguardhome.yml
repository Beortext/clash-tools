name: Update AdGuardHome
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

env:
  download_url: https://github.com/AdguardTeam/AdGuardHome/releases/download
  download_version: ''

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Download and unzip `upx`
      run: |
        mkdir -p ./tmp
        upx_version=$(curl -sSL https://api.github.com/repos/upx/upx/releases | grep tag_name | head -n 1 | sed 's/.*v/v/g' | sed 's/",$//')
        upx_version_nov=$(curl -sSL https://api.github.com/repos/upx/upx/releases | grep tag_name | head -n 1 | sed 's/.*v//g' | sed 's/",$//')
        echo "upx_version=${upx_version}" >> ${GITHUB_ENV}
        echo "upx_version_nov=${upx_version_nov}" >> ${GITHUB_ENV}
        wget -P ./tmp "https://github.com/upx/upx/releases/download/${upx_version}/upx-${upx_version_nov}-amd64_linux.tar.xz"
        tar -xf "./tmp/upx-${upx_version_nov}-amd64_linux.tar.xz" -C ./tmp
        rm -f ./tmp/*.tar.xz

    - name: Download and compress `AdGuardHome`
      run: |
        download_version=$(curl -sSL https://api.github.com/repos/AdguardTeam/AdGuardHome/releases | grep tag_name | tail -n 2 | head -n 1 | sed 's/.*v/v/g' | sed 's/",$//')
        echo "download_version=${download_version}" >> ${GITHUB_ENV}
        archs=(amd64 armv5 armv6 armv7 arm64 mips_softfloat mipsle_softfloat)
        new_name=(amd64 armv5 armv6 armv7 armv8 mips_softfloat mipsle_softfloat)
        for((i=0;i<7;i++));do
          wget "${download_url}/${download_version}/AdGuardHome_linux_${archs[i]}.tar.gz" -O - | tar -xz -C ./tmp
          mv ./tmp/AdGuardHome/AdGuardHome ./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}
          chmod +x ./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}
          if [ "${archs[i]}" != "armv5" ];then
            if [[ ${archs[i]} = mips* ]];then
              ./tmp/upx-${upx_version_nov}-amd64_linux/upx --best ./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}
            else
              ./tmp/upx-${upx_version_nov}-amd64_linux/upx --best ./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}
            fi
          fi
        done
        wget -P ./tmp "${download_url}/${download_version}/AdGuardHome_windows_amd64.zip"
        unzip -o "./tmp/AdGuardHome_windows_amd64.zip" -d ./tmp
        rm -f ./tmp/*.zip
        mv "./tmp/AdGuardHome/AdGuardHome.exe" "./tmp/AdGuardHome/AdGuardHome_windows_amd64.exe"
        rm -rf ./tmp/upx*

    - name: Move `AdGuardHome` to `AdGuardHome` directory
      run: |
        mkdir -p ./AdGuardHome
        rm -rf ./AdGuardHome/*
        rm -f ./tmp/AdGuardHome/*.sig
        cp ./tmp/AdGuardHome/AdGuardHome* ./AdGuardHome
        rm -rf ./tmp

    - name: Commit and push
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add . && git commit -m "更新 AdGuardHome 至 ${download_version}" || exit 0
        git push -f

    - name: Purge jsDelivr CDN cache
      uses: gacts/purge-jsdelivr-cache@v1
      with:
        url: |
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_amd64
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_armv5
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_armv6
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_armv7
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_armv8
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_mips_softfloat
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome/AdGuardHome_linux_mipsle_softfloat
