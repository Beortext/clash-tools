name: Update Clash.Meta release
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - mains
    paths-ignore:
      - "**/README.md"

env:
  download_url: https://github.com/MetaCubeX/Clash.Meta/releases/download

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Set variables
      run: |
        echo "download_version=${download_version}" >> ${GITHUB_ENV}

    - name: Download and unzip `upx`
      run: |
        mkdir -p ./tmp
        upx_version=$(curl -sSL https://api.github.com/repos/upx/upx/releases | grep tag_name | head -n 1 | sed 's/.*v/v/g' | sed 's/",$//')
        upx_version_nov=$(curl -sSL https://api.github.com/repos/upx/upx/releases | grep tag_name | head -n 1 | sed 's/.*v//g' | sed 's/",$//')
        echo "upx_version=${upx_version}" >> ${GITHUB_ENV}
        echo "upx_version_nov=${upx_version_nov}" >> ${GITHUB_ENV}
        wget -P ./tmp "https://github.com/upx/upx/releases/download/${upx_version}/upx-${upx_version_nov}-amd64_linux.tar.xz"
        tar -xf "./tmp/upx-${upx_version_nov}-amd64_linux.tar.xz" -C ./tmp
        rm -f ./tmp/*.tar.xz

    - name: Download and compress `Clash.Meta core`
      run: |
        download_version=$(curl -sSL https://api.github.com/repos/MetaCubeX/Clash.Meta/releases | grep '"tag_name": "v' | head -n 1 | sed 's/.*v/v/g' | sed 's/",$//')
        archs=(amd64-compatible armv5 armv6 armv7 arm64 mips-softfloat mipsle-hardfloat mipsle-softfloat)
        new_name=(amd64 armv5 armv6 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat)
        for((i=0;i<8;i++));do
          wget "${download_url}/${download_version}/Clash.Meta-linux-${archs[i]}-${download_version}.gz" -O - | gunzip -c > ./tmp/clash.meta-linux-${new_name[i]}
          chmod +x ./tmp/clash.meta-linux-${new_name[i]}
          if [ "${archs[i]}" != "armv5" ];then
            if [[ ${archs[i]} = mips* ]];then
              ./tmp/upx-${upx_version_nov}-amd64_linux/upx --best ./tmp/clash.meta-linux-${new_name[i]}
            else
              ./tmp/upx-${upx_version_nov}-amd64_linux/upx --best ./tmp/clash.meta-linux-${new_name[i]}
            fi
          fi
        done
        wget -P ./tmp "${download_url}/${download_version}/clash.meta-windows-amd64-${download_version}.zip"
        unzip "./tmp/clash.meta-windows-amd64-${download_version}.zip" -d ./tmp
        rm -f ./tmp/*.zip
        rm -rf ./tmp/upx*

    - name: Move `Clash.Meta core` to `Clash.Meta-Core` directory
      run: |
        mkdir -p ./Clash.Meta-release
        rm -rf ./Clash.Meta-release/*
        cp ./tmp/* ./Clash.Meta-release
        rm -rf ./tmp

    - name: Commit and push
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add . && git commit -m "更新 Clash.Meta 内核至 ${download_version}" || exit 0
        git push

    - name: Purge jsDelivr CDN cache
      uses: gacts/purge-jsdelivr-cache@v1
      with:
        url: |
          https://cdn.jsdelivr.net/gh/${{ github.repository }}@main/Clash.Meta-Release/clash.meta-linux-arm64
