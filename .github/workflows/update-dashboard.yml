name: Update Dashboard
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/update-adguardhome-release.yml"
      - ".github/workflows/update-adguardhome-prerelease.yml"
      - ".github/workflows/update-clash.meta-release.yml"
      - ".github/workflows/update-clash.meta-prerelease.yml"
      - ".github/workflows/update-release.yml"

env:
  clash_dashboard_download_version: ''
  Razord_meta_download_version: ''
  yacd_download_version: ''
  Yacd_meta_download_version: ''
  metacubexd_download_version: ''

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Get version
      run: |
        clash_dashboard_download_version=$(curl -sSL https://api.github.com/repos/Dreamacro/clash-dashboard/tags | grep 'name' | head -n 1 | sed 's/.*v/v/g' | sed 's/",$//g')
        Razord_meta_download_version=$(curl -sSL https://api.github.com/repos/MetaCubeX/Razord-meta/tags | grep 'name' | head -n 1 | sed 's/.*v/v/g' | sed 's/",$//g')
        yacd_download_version=$(curl -sSL https://api.github.com/repos/haishanh/yacd/releases/latest | grep 'tag_name' | sed 's/.*v/v/g' | sed 's/",$//g')
        Yacd_meta_download_version=$(curl -sSL https://api.github.com/repos/MetaCubeX/Yacd-meta/releases/latest | grep 'tag_name' | sed 's/.*v/v/g' | sed 's/",$//g')
        metacubexd_download_version=$(curl -sSL https://api.github.com/repos/MetaCubeX/metacubexd/releases/latest | grep 'tag_name' | sed 's/.*v/v/g' | sed 's/",$//g')
        echo "clash_dashboard_download_version=${clash_dashboard_download_version}" >> ${GITHUB_ENV}
        echo "Razord_meta_download_version=${Razord_meta_download_version}" >> ${GITHUB_ENV}
        echo "yacd_download_version=${yacd_download_version}" >> ${GITHUB_ENV}
        echo "Yacd_meta_download_version=${Yacd_meta_download_version}" >> ${GITHUB_ENV}
        echo "metacubexd_download_version=${metacubexd_download_version}" >> ${GITHUB_ENV}

    - name: Download and generate dashboard
      run: |
        mkdir -p ./Dashboard
        rm -f ./Dashboard/*.tar.gz
        archs=(Dreamacro MetaCubeX haishanh MetaCubeX MetaCubeX)
        new_name=(clash-dashboard Razord-meta yacd Yacd-meta metacubexd)
        all_version=(${clash_dashboard_download_version} ${Razord_meta_download_version} ${yacd_download_version} ${Yacd_meta_download_version} ${metacubexd_download_version})
        for((i=0;i<5;i++));do
          mkdir -p ./tmp
          curl -o ./tmp/gh-pages.zip -L "https://github.com/${archs[i]}/${new_name[i]}/archive/gh-pages.zip"
          unzip ./tmp/gh-pages.zip -d ./tmp
          tar -czf ./tmp/${new_name[i]}.tar.gz -C ./tmp/${new_name[i]}-gh-pages .
          cp ./tmp/*.tar.gz ./Dashboard
          rm -rf ./tmp
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add . && git commit -m "更新 ${new_name[i]} 至 ${all_version[i]}" || exit 0
          git push -f
        done

    - name: Purge jsDelivr CDN
      run: |
        cd ./Dashboard || exit 1
        for file in $(ls); do
          curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@main/Dashboard/${file}"
        done
